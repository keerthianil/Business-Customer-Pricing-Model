/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;



import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.ProductManagement.Product;
import model.Supplier.Supplier;
import model.Supplier.SupplierDirectory;
import model.OrderManagement.OrderItem;

import java.awt.CardLayout;
import javax.swing.JPanel;
import model.Business.Business;
import model.Supplier.Supplier;
import model.Supplier.SupplierDirectory;

/**
 *
 * @author geetika
 */




public class PricingAnalysisJPanel extends javax.swing.JPanel {
    
    JPanel CardSequencePanel;
    Supplier supplier;
    Business business;
    SupplierDirectory SupplierDirectory;

    /**
     * Creates new form PricingAnalysisJPanel
     */
    public PricingAnalysisJPanel(JPanel upc, SupplierDirectory sd) {
        initComponents();
        this.CardSequencePanel = upc;
        
        SupplierDirectory = sd;
        
        populateSupplierCombo();
        //refreshTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbSuppliers = new javax.swing.JComboBox<>();
        btnRunSimulation = new javax.swing.JButton();
        lblSuppliers = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        SupplierCatalogTable = new javax.swing.JTable();
        titlejLbl = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        productNameTextField = new javax.swing.JTextField();
        productFrequencyAboveTargetTextField = new javax.swing.JTextField();
        lblFrequencyAbvTarget = new javax.swing.JLabel();
        productRevenueTextField = new javax.swing.JTextField();
        lblSupplrSalesRevenue = new javax.swing.JLabel();
        productFrequencyBelowTargetTextField = new javax.swing.JTextField();
        lblFrequencyblwTarget = new javax.swing.JLabel();
        productPricePerformanceTextField = new javax.swing.JTextField();
        lblMarginArndTarget = new javax.swing.JLabel();
        lblProduct = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtRunSimulation = new javax.swing.JTextArea();
        btnGenerateReport = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        cmbSuppliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSuppliersActionPerformed(evt);
            }
        });

        btnRunSimulation.setText("Run Simulation");
        btnRunSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunSimulationActionPerformed(evt);
            }
        });

        lblSuppliers.setText("Suppliers");

        SupplierCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Floor", "Ceiling", "Target"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SupplierCatalogTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SupplierCatalogTableMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SupplierCatalogTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(SupplierCatalogTable);

        jScrollPane2.setViewportView(jScrollPane1);

        titlejLbl.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        titlejLbl.setText("Pricing Analysis");

        lblProductName.setText("Product name");

        productNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productNameTextFieldActionPerformed(evt);
            }
        });

        lblFrequencyAbvTarget.setText("Frequency Above Target");

        productRevenueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productRevenueTextFieldActionPerformed(evt);
            }
        });

        lblSupplrSalesRevenue.setText("Supplier Sales Revenue");

        lblFrequencyblwTarget.setText("Frequency Below Target");

        productPricePerformanceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productPricePerformanceTextFieldActionPerformed(evt);
            }
        });

        lblMarginArndTarget.setText("Supplier Marign around target");

        lblProduct.setText("Product");

        txtRunSimulation.setColumns(20);
        txtRunSimulation.setRows(5);
        jScrollPane3.setViewportView(txtRunSimulation);

        btnGenerateReport.setText("Generate Report");
        btnGenerateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateReportActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter Revised Price");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblProduct)
                    .addComponent(cmbSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titlejLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRunSimulation)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(productRevenueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSupplrSalesRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblMarginArndTarget, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productPricePerformanceTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerateReport)
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 58, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(lblFrequencyAbvTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(lblFrequencyblwTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(productFrequencyAboveTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(productFrequencyBelowTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 38, Short.MAX_VALUE)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField1, productNameTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(titlejLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSuppliers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lblProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRunSimulation)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarginArndTarget)
                    .addComponent(lblSupplrSalesRevenue))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productPricePerformanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productRevenueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGenerateReport))
                .addGap(18, 18, 18))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 161, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(107, 107, 107)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblProductName)
                        .addComponent(lblFrequencyAbvTarget)
                        .addComponent(lblFrequencyblwTarget))
                    .addGap(3, 3, 3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(productNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(productFrequencyAboveTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(productFrequencyBelowTargetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 73, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSuppliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSuppliersActionPerformed
        // TODO add your handling code here:
        populateProductTable();



    }//GEN-LAST:event_cmbSuppliersActionPerformed

    private void btnRunSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunSimulationActionPerformed
        // TODO add your handling code here:
       runSimulation();
    }//GEN-LAST:event_btnRunSimulationActionPerformed

    private void SupplierCatalogTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierCatalogTableMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_SupplierCatalogTableMouseEntered

    private void SupplierCatalogTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierCatalogTableMousePressed
        // TODO add your handling code here:
int selectedRow = SupplierCatalogTable.getSelectedRow();
    if (selectedRow < 0) {
        return;
    }

    String productName = (String) SupplierCatalogTable.getValueAt(selectedRow, 0);
    Supplier selectedSupplier = null;
    for (Supplier supplier : SupplierDirectory.getSupplierList()) {
        if (supplier.getName().equals(cmbSuppliers.getSelectedItem())) {
            selectedSupplier = supplier;
            break;
        }
    }

    if (selectedSupplier == null) {
        return;
    }

    Product selectedProduct = null;
    for (Product product : selectedSupplier.getProductCatalog().getProductList()) {
        if (product.getName().equals(productName)) {
            selectedProduct = product;
            break;
        }
    }

    if (selectedProduct == null) {
        return;
    }

    productNameTextField.setText(selectedProduct.getName());
    productFrequencyAboveTargetTextField.setText(String.valueOf(selectedProduct.getNumberOfProductSalesAboveTarget()));
    productFrequencyBelowTargetTextField.setText(String.valueOf(selectedProduct.getNumberOfProductSalesBelowTarget()));
    }//GEN-LAST:event_SupplierCatalogTableMousePressed

    private void productNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productNameTextFieldActionPerformed

    private void productRevenueTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productRevenueTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productRevenueTextFieldActionPerformed

    private void productPricePerformanceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productPricePerformanceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productPricePerformanceTextFieldActionPerformed

    private void btnGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateReportActionPerformed
        // TODO add your handling code here:
        generateReport();
    }//GEN-LAST:event_btnGenerateReportActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

        public void refreshTable() {

        DefaultTableModel model = (DefaultTableModel) SupplierCatalogTable.getModel();
        model.setRowCount(0);

        for (Product p : supplier.getProductCatalog().getProductList()) {
            Object row[] = new Object[4];
            row[0] = p;
            row[1] = p.getFloorPrice();
            row[2] = p.getCeilingPrice();
            row[3] = p.getTargetPrice();
            model.addRow(row);
        }
    }
        
       public void populateSupplierCombo() {
       //cmbSuppliers.removeAllItems();

       for(Supplier supplier : SupplierDirectory.getSupplierList()){
           cmbSuppliers.addItem(supplier.getName());
       }
     
       
    }
       
private void populateProductTable() {
    
    productNameTextField.setText("");
    productFrequencyAboveTargetTextField.setText("");
    productFrequencyBelowTargetTextField.setText("");
    
    String selectedSupplierName = (String) cmbSuppliers.getSelectedItem();
    if (selectedSupplierName == null) {
        return;
    }

    Supplier selectedSupplier = null;
    for (Supplier supplier : SupplierDirectory.getSupplierList()) {
        if (supplier.getName().equals(selectedSupplierName)) {
            selectedSupplier = supplier;
            break;
        }
    }

    if (selectedSupplier == null) {
        return;
    }

    DefaultTableModel model = (DefaultTableModel) SupplierCatalogTable.getModel();
    model.setRowCount(0);

    for (Product p : selectedSupplier.getProductCatalog().getProductList()) {
        Object row[] = new Object[4];
        row[0] = p.getName();
        row[1] = p.getFloorPrice();
        row[2] = p.getCeilingPrice();
        row[3] = p.getTargetPrice();
        model.addRow(row);
    }
    
    productRevenueTextField.setText(String.valueOf(selectedSupplier.getTotalSalesRevenue()));
    productPricePerformanceTextField.setText(String.valueOf(selectedSupplier.getTotalMargin()));
}
private void generateReport() {
    if (txtRunSimulation.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please run the simulation first.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    String selectedSupplierName = (String) cmbSuppliers.getSelectedItem();
    if (selectedSupplierName == null) {
        return;
    }

    Supplier selectedSupplier = null;
    for (Supplier supplier : SupplierDirectory.getSupplierList()) {
        if (supplier.getName().equals(selectedSupplierName)) {
            selectedSupplier = supplier;
            break;
        }
    }

    if (selectedSupplier == null) {
        return;
    }

    StringBuilder report = new StringBuilder();
    report.append("Report for Supplier: ").append(selectedSupplierName).append("\n\n");

    for (Product product : selectedSupplier.getProductCatalog().getProductList()) {
        int priceBeforeSimulation = product.getTargetPrice() - Integer.parseInt(jTextField1.getText());
        int priceAfterSimulation = product.getTargetPrice();
        int frequencyAboveTarget = product.getNumberOfProductSalesAboveTarget();
        int frequencyBelowTarget = product.getNumberOfProductSalesBelowTarget();

        report.append("Product: ").append(product.getName()).append("\n")
              .append("Price Before Simulation: ").append(priceBeforeSimulation).append("\n")
              .append("Price After Simulation: ").append(priceAfterSimulation).append("\n")
              .append("Frequency Above Target: ").append(frequencyAboveTarget).append("\n")
              .append("Frequency Below Target: ").append(frequencyBelowTarget).append("\n\n");
    }

    JOptionPane.showMessageDialog(this, report.toString(), "Simulation Report", JOptionPane.INFORMATION_MESSAGE);
}

private void runSimulation() {
    String selectedSupplierName = (String) cmbSuppliers.getSelectedItem();
    if (selectedSupplierName == null) {
        return;
    }

    Supplier selectedSupplier = null;
    for (Supplier supplier : SupplierDirectory.getSupplierList()) {
        if (supplier.getName().equals(selectedSupplierName)) {
            selectedSupplier = supplier;
            break;
        }
    }

    if (selectedSupplier == null) {
        return;
    }

    try {
        double percentageChange = Double.parseDouble(jTextField1.getText()) / 100;
        boolean isProfitMaximized = false;
        double initialProfitMargin = selectedSupplier.calculateTotalProfitMargin();
        double previousProfitMargin = initialProfitMargin;

        while (!isProfitMaximized) {
            for (Product product : selectedSupplier.getProductCatalog().getProductList()) {
                int newTargetPrice = (int) (product.getTargetPrice() * (1 + percentageChange));
                product.updateProduct(product.getFloorPrice(), product.getCeilingPrice(), newTargetPrice);
            }

            double currentProfitMargin = selectedSupplier.calculateTotalProfitMargin();
            //productPricePerformanceTextField.setText(String.format("%.2f", currentProfitMargin));

            if (currentProfitMargin <= previousProfitMargin) {
                isProfitMaximized = true;
            } else {
                previousProfitMargin = currentProfitMargin;
            }
        }
        previousProfitMargin = initialProfitMargin;

        // Run the simulation and print the results
        StringBuilder results = new StringBuilder();
        results.append("Simulation Results for Supplier: ").append(selectedSupplierName).append("\n");

        for (Product product : selectedSupplier.getProductCatalog().getProductList()) {
            int totalSalesRevenue = 0;
            for (OrderItem orderItem : product.getOrderItems()) {
                totalSalesRevenue += orderItem.getOrderItemTotal();
            }
            results.append("Product: ").append(product.getName())
                   .append(", New Target Price: ").append(product.getTargetPrice())
                   .append(", Total Sales Revenue: ").append(totalSalesRevenue).append("\n");
        }

        txtRunSimulation.setText(results.toString());

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please enter a valid number for price change.", "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SupplierCatalogTable;
    private javax.swing.JButton btnGenerateReport;
    private javax.swing.JButton btnRunSimulation;
    private javax.swing.JComboBox<String> cmbSuppliers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblFrequencyAbvTarget;
    private javax.swing.JLabel lblFrequencyblwTarget;
    private javax.swing.JLabel lblMarginArndTarget;
    private javax.swing.JLabel lblProduct;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblSuppliers;
    private javax.swing.JLabel lblSupplrSalesRevenue;
    private javax.swing.JTextField productFrequencyAboveTargetTextField;
    private javax.swing.JTextField productFrequencyBelowTargetTextField;
    private javax.swing.JTextField productNameTextField;
    private javax.swing.JTextField productPricePerformanceTextField;
    private javax.swing.JTextField productRevenueTextField;
    private javax.swing.JLabel titlejLbl;
    private javax.swing.JTextArea txtRunSimulation;
    // End of variables declaration//GEN-END:variables
}
